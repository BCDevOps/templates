kind: "Template"
apiVersion: "v1"
metadata:
  name: "nodejs-mongodb-binary-src"
  creationTimestamp: null
  annotations:
    description: "An Node.js application from binary source input with a MongoDB database"
    iconClass: "icon-nodejs"
    tags: "instant-app,nodejs,mongodb"
objects:
  -
    kind: "BuildConfig"
    apiVersion: "v1"
    metadata:
      name: "nodejs-mongodb-binary-src"
      annotations:
        description: "Defines how to build the application"
    spec:
      source:
        type: "Binary"
        binary:
          asFile: "webapp.tar"
        contextDir: "${CONTEXT_DIR}"
      strategy:
        type: "Source"
        sourceStrategy:
          from:
            kind: "ImageStreamTag"
            name: "${APPLICATION_NAME}-builder-image:${NODE_VERSION}"
          incremental: true
      output:
        to:
          kind: "ImageStreamTag"
          name: "nodejs-mongodb-binary-src:latest"
  -
    kind: "ImageStream"
    apiVersion: "v1"
    metadata:
      name: "nodejs-mongodb-binary-src"
      annotations:
        description: "Keeps track of changes in the application image"
  -
    kind: "ImageStream"
    apiVersion: "v1"
    metadata:
      name: "${APPLICATION_NAME}-builder-image"
    spec:
      dockerImageRepository: "${BUILDER_IMAGE}"
  -
    kind: "PersistentVolumeClaim"
    apiVersion: "v1"
    metadata:
      name: "${DATABASE_SERVICE_NAME}"
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "${VOLUME_CAPACITY}"
  -
    kind: "DeploymentConfig"
    apiVersion: "v1"
    metadata:
      name: "nodejs-mongodb-binary-src"
      annotations:
        description: "Defines how to deploy the application server"
    spec:
      strategy:
        type: "Rolling"
      triggers:
        -
          type: "ImageChange"
          imageChangeParams:
            automatic: true
            containerNames:
              - "nodejs-mongodb-binary-src"
            from:
              kind: "ImageStreamTag"
              name: "nodejs-mongodb-binary-src:latest"
        -
          type: "ConfigChange"
      replicas: 1
      selector:
        name: "nodejs-mongodb-binary-src"
      template:
        metadata:
          name: "nodejs-mongodb-binary-src"
          labels:
            name: "nodejs-mongodb-binary-src"
        spec:
          containers:
            -
              name: "nodejs-mongodb-binary-src"
              image: "nodejs-mongodb-binary-src"
              ports:
                -
                  containerPort: 8080
              env:
                -
                  name: NODE_ENV
                  value: production
                -
                  name: "DATABASE_SERVICE_NAME"
                  value: "${DATABASE_SERVICE_NAME}"
                -
                  name: "MONGODB_USER"
                  value: "${DATABASE_USER}"
                -
                  name: "MONGODB_PASSWORD"
                  value: "${DATABASE_PASSWORD}"
                -
                  name: "MONGODB_DATABASE"
                  value: "${DATABASE_NAME}"
                -
                  name: "MONGODB_ADMIN_PASSWORD"
                  value: "${DATABASE_ADMIN_PASSWORD}"
  -
    kind: "DeploymentConfig"
    apiVersion: "v1"
    metadata:
      name: "${DATABASE_SERVICE_NAME}"
      annotations:
        description: "Defines how to deploy the database"
    spec:
      strategy:
        type: "Recreate"
      triggers:
        -
          type: "ImageChange"
          imageChangeParams:
            automatic: false
            containerNames:
              - "mongodb"
            from:
              kind: "ImageStreamTag"
              namespace: "openshift"
              name: "mongodb:2.6"
        -
          type: "ConfigChange"
      replicas: 1
      selector:
        name: "${DATABASE_SERVICE_NAME}"
      template:
        metadata:
          name: "${DATABASE_SERVICE_NAME}"
          labels:
            name: "${DATABASE_SERVICE_NAME}"
        spec:
          containers:
            -
              name: "mongodb"
              image: "mongodb"
              ports:
                -
                  containerPort: 27017
              env:
                -
                  name: "MONGODB_USER"
                  value: "${DATABASE_USER}"
                -
                  name: "MONGODB_PASSWORD"
                  value: "${DATABASE_PASSWORD}"
                -
                  name: "MONGODB_DATABASE"
                  value: "${DATABASE_NAME}"
                -
                  name: "MONGODB_ADMIN_PASSWORD"
                  value: "${DATABASE_ADMIN_PASSWORD}"
              volumeMounts:
                -
                  name: "${DATABASE_SERVICE_NAME}-data"
                  mountPath: "/var/lib/mongodb/data"
          volumes:
            -
              name: "${DATABASE_SERVICE_NAME}-data"
              persistentVolumeClaim:
                claimName: "${DATABASE_SERVICE_NAME}"
  -
    kind: "Service"
    apiVersion: "v1"
    metadata:
      name: "${APPLICATION_NAME}"
      annotations:
        description: "Exposes and load balances the application pods"
    spec:
      ports:
        -
          name: "web"
          port: 8080
          targetPort: "${APPLICATION_INTERNAL_PORT}"
      selector:
        name: "nodejs-mongodb-binary-src"
  -
    kind: "Service"
    apiVersion: "v1"
    metadata:
      name: "${DATABASE_SERVICE_NAME}"
      annotations:
        description: "Exposes the database server"
    spec:
      ports:
        -
          name: "mongodb"
          port: 27017
          targetPort: 27017
      selector:
        name: "${DATABASE_SERVICE_NAME}"
  -
    kind: "Route"
    apiVersion: "v1"
    metadata:
      name: "nodejs-mongodb-binary-src"
    spec:
      host: "${APPLICATION_DOMAIN}"
      to:
        kind: "Service"
        name: "nodejs-mongodb-binary-src"
parameters:
  -
    name: "APPLICATION_NAME"
    description: "Name of the application"
    required: true
  -
    name: "BUILDER_IMAGE"
    description: "Node builder image"
    value: "node"
    required: true
  -
    name: "NODE_VERSION"
    description: "Tag of node builder image. See https://hub.docker.com/_/node/"
    value: "onbuild"
    required: true
  -
    name: "CONTEXT_DIR"
    description: "Set this to the relative path to your project if it is not in the root of your repository"
  -
    name: "APPLICATION_DOMAIN"
    description: "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted."
  -
    name: "APPLICATION_INTERNAL_PORT"
    description: "The exposed port of Node.js service."
  -
    name: "DATABASE_SERVICE_NAME"
    description: "Database service name"
    value: "mongodb"
  -
    name: "DATABASE_USER"
    description: "Username for MongoDB user that will be used for accessing the database"
    generate: "expression"
    from: "user[A-Z0-9]{3}"
  -
    name: "DATABASE_PASSWORD"
    description: "Password for the MongoDB user"
    generate: "expression"
    from: "[a-zA-Z0-9]{16}"
  -
    name: "DATABASE_NAME"
    description: "Database name"
    value: "sampledb"
  -
    name: "DATABASE_ADMIN_PASSWORD"
    description: "Password for the database admin user"
    generate: "expression"
    from: "[a-zA-Z0-9]{16}"
  -
    name: "VOLUME_CAPACITY"
    displayName: "Volume capacity"
    description: "Volume space available for data, e.g. 512Mi, 2Gi"
    value: "512Mi"
    required: true
labels:
  template: "nodejs-mongodb-binary-src"
